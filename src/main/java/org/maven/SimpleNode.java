
/* Generated By:JJTree: Do not edit this line. SimpleNode.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.maven;

import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.UserDataHandler;



public class SimpleNode implements Node {

  protected Node parent;
  protected Node[] children;
  protected int id;
  protected Object value;
  protected BasicL parser;

  public SimpleNode(int i) {
    id = i;
  }

  public SimpleNode(BasicL p, int i) {
    this(i);
    parser = p;
  }

  public void jjtOpen() {
  }

  public void jjtClose() {
  }

  public void jjtSetParent(Node n) { parent = n; }
  public Node jjtGetParent() { return parent; }

  public void jjtAddChild(Node n, int i) {
    if (children == null) {
      children = new Node[i + 1];
    } else if (i >= children.length) {
      Node c[] = new Node[i + 1];
      System.arraycopy(children, 0, c, 0, children.length);
      children = c;
    }
    children[i] = n;
  }

  public Node jjtGetChild(int i) {
    return children[i];
  }

  public int jjtGetNumChildren() {
    return (children == null) ? 0 : children.length;
  }

  public void jjtSetValue(Object value) { this.value = value; }
  public Object jjtGetValue() { return value; }

  /** Accept the visitor. **/
  public Object jjtAccept(BasicLVisitor visitor, Object data)
{
    return visitor.visit(this, data);
  }

  /** Accept the visitor. **/
  public Object childrenAccept(BasicLVisitor visitor, Object data)
{
    if (children != null) {
      for (int i = 0; i < children.length; ++i) {
        ((SimpleNode) children[i]).jjtAccept(visitor, data);
      }
    }
    return data;
  }

  /* You can override these two methods in subclasses of SimpleNode to
     customize the way the node appears when the tree is dumped.  If
     your output uses more than one line you should override
     toString(String), otherwise overriding toString() is probably all
     you need to do. */

  public String toString() {
    return BasicLConstants.tokenImage[id];
  }
  public String toString(String prefix) { return prefix + toString(); }

  /* Override this method if you want to customize how the node dumps
     out its children. */

  public void dump(String prefix) {
    System.out.println(toString(prefix));
    if (children != null) {
      for (int i = 0; i < children.length; ++i) {
        SimpleNode n = (SimpleNode)children[i];
        if (n != null) {
          n.dump(prefix + " ");
        }
      }
    }
  }

  public int getId() {
    return id;
  }

public String getNodeName() {
	// TODO Auto-generated method stub
	return null;
}

public String getNodeValue() throws DOMException {
	// TODO Auto-generated method stub
	return null;
}

public void setNodeValue(String nodeValue) throws DOMException {
	// TODO Auto-generated method stub
	
}

public short getNodeType() {
	// TODO Auto-generated method stub
	return 0;
}

public Node getParentNode() {
	// TODO Auto-generated method stub
	return null;
}

public NodeList getChildNodes1() {
	// TODO Auto-generated method stub
	return null;
}

public Node getFirstChild() {
	// TODO Auto-generated method stub
	return null;
}

public Node getLastChild() {
	// TODO Auto-generated method stub
	return null;
}

public Node getPreviousSibling() {
	// TODO Auto-generated method stub
	return null;
}

public Node getNextSibling() {
	// TODO Auto-generated method stub
	return null;
}

public NamedNodeMap getAttributes1() {
	// TODO Auto-generated method stub
	return null;
}

public Document getOwnerDocument1() {
	// TODO Auto-generated method stub
	return null;
}

public Node insertBefore(Node newChild, Node refChild) throws DOMException {
	// TODO Auto-generated method stub
	return null;
}

public Node replaceChild(Node newChild, Node oldChild) throws DOMException {
	// TODO Auto-generated method stub
	return null;
}

public Node removeChild(Node oldChild) throws DOMException {
	// TODO Auto-generated method stub
	return null;
}

public Node appendChild(Node newChild) throws DOMException {
	// TODO Auto-generated method stub
	return null;
}

public boolean hasChildNodes() {
	// TODO Auto-generated method stub
	return false;
}

public Node cloneNode(boolean deep) {
	// TODO Auto-generated method stub
	return null;
}

public void normalize() {
	// TODO Auto-generated method stub
	
}

public boolean isSupported(String feature, String version) {
	// TODO Auto-generated method stub
	return false;
}

public String getNamespaceURI() {
	// TODO Auto-generated method stub
	return null;
}

public String getPrefix() {
	// TODO Auto-generated method stub
	return null;
}

public void setPrefix(String prefix) throws DOMException {
	// TODO Auto-generated method stub
	
}

public String getLocalName() {
	// TODO Auto-generated method stub
	return null;
}

public boolean hasAttributes() {
	// TODO Auto-generated method stub
	return false;
}

public String getBaseURI() {
	// TODO Auto-generated method stub
	return null;
}

public short compareDocumentPosition(Node other) throws DOMException {
	// TODO Auto-generated method stub
	return 0;
}

public String getTextContent() throws DOMException {
	// TODO Auto-generated method stub
	return null;
}

public void setTextContent(String textContent) throws DOMException {
	// TODO Auto-generated method stub
	
}

public boolean isSameNode(Node other) {
	// TODO Auto-generated method stub
	return false;
}

public String lookupPrefix(String namespaceURI) {
	// TODO Auto-generated method stub
	return null;
}

public boolean isDefaultNamespace(String namespaceURI) {
	// TODO Auto-generated method stub
	return false;
}

public String lookupNamespaceURI(String prefix) {
	// TODO Auto-generated method stub
	return null;
}

public boolean isEqualNode(Node arg) {
	// TODO Auto-generated method stub
	return false;
}

public Object getFeature(String feature, String version) {
	// TODO Auto-generated method stub
	return null;
}

public Object setUserData1(String key, Object data, UserDataHandler handler) {
	// TODO Auto-generated method stub
	return null;
}

public Object getUserData(String key) {
	// TODO Auto-generated method stub
	return null;
}

public NodeList getChildNodes() {
	// TODO Auto-generated method stub
	return null;
}

public NamedNodeMap getAttributes() {
	// TODO Auto-generated method stub
	return null;
}

public Document getOwnerDocument() {
	// TODO Auto-generated method stub
	return null;
}

public Object setUserData(String key, Object data, UserDataHandler handler) {
	// TODO Auto-generated method stub
	return null;
}
}

/* JavaCC - OriginalChecksum=32a4bb4f653fe4c0245dbbf9e13d2e75 (do not edit this line) */